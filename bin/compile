#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -eo pipefail

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LP_DIR=`cd $(dirname $0); cd ..; pwd`
FONTS_DIR=`cd "$LP_DIR/fonts"; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Store current Heroku stack in cache to detect changes
mkdir -p "$CACHE_DIR/.apt"
echo "$STACK" > "$CACHE_DIR/.apt/STACK"

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

PACKAGES="
  fonts-liberation
  fonts-ipafont-gothic
  fonts-wqy-zenhei
  fonts-thai-tlwg
  fonts-kacst
  fontconfig
  libayatana-appindicator3-1
  libasound2t64
  libatk-bridge2.0-0t64
  libatk1.0-0
  libgbm1
  libgtk-3-0t64
  libnspr4
  libnss3
  libx11-xcb1
  libxcomposite1
  libxcursor1
  libxdamage1
  libxfixes3
  libxi6
  libxrandr2
  libxss1
  libxtst6
  xdg-utils
  libjq1
  jq
"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_FLAGS="--allow-downgrades --allow-remove-essential --allow-change-held-packages"

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

for PACKAGE in $PACKAGES; do
  topic "Fetching .debs for $PACKAGE"
  apt-get $APT_OPTIONS -y $APT_FLAGS -d install --reinstall $PACKAGE | indent
done

mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

topic "Installing fonts"
mkdir -p $BUILD_DIR/.fonts
cp $FONTS_DIR/* $BUILD_DIR/.fonts/ || true

topic "Installing Chrome via Puppeteer"
export PUPPETEER_CACHE_DIR="$BUILD_DIR/.cache/puppeteer"
mkdir -p $PUPPETEER_CACHE_DIR
cd $LP_DIR
node -e "require('puppeteer').createBrowserFetcher().download('$CHROME_REVISION')"

# Extract Chrome path for export
CHROME_PATH="$PUPPETEER_CACHE_DIR/chrome/linux-138.0.7204.168/chrome-linux64/chrome"

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF > $BUILD_DIR/.profile.d/puppeteer.sh
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
export CHROME_BIN="$CHROME_PATH"
export PUPPETEER_EXECUTABLE_PATH="$CHROME_PATH"
EOF

# Export for other buildpacks
export CHROME_BIN="$CHROME_PATH"
export PUPPETEER_EXECUTABLE_PATH="$CHROME_PATH"
export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"

export | grep -E -e ' (CHROME_BIN|PUPPETEER_EXECUTABLE_PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)=' > "$LP_DIR/export"

topic "Rewriting pkgconfig paths"
find $BUILD_DIR/.apt -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.apt\1!g'

topic "Buildpack compile complete âœ…"
